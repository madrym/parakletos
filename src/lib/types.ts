/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/v1/bibles": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets an array of `Bible` objects authorized for current API Key
         *      */
        get: operations["getBibles"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/bibles/{bibleId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets a single `Bible` for a given `bibleId`
         *      */
        get: operations["getBible"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/bibles/{bibleId}/books": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets an array of `Book` objects for a given `bibleId`
         *      */
        get: operations["getBooks"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/bibles/{bibleId}/books/{bookId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets a single `Book` object for a given `bibleId` and `bookId`
         *      */
        get: operations["getBook"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/bibles/{bibleId}/books/{bookId}/chapters": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets an array of `Chapter` objects for a given `bibleId` and `bookId`
         *      */
        get: operations["getChapters"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/bibles/{bibleId}/chapters/{chapterId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets a single `Chapter` object for a given `bibleId` and `chapterId`.
         *     This Chapter object also includes an `content` property with all verses for the Chapter.
         *      */
        get: operations["getChapter"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/bibles/{bibleId}/passages/{passageId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets a `Passage` object for a given `bibleId` and `passageId`. This
         *     Passage object also includes an `content` property with all verses
         *     corresponding to the passageId.
         *     The `passageId` parameter can represent a chapter, verse, or range of verses.
         *      */
        get: operations["getPassage"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/bibles/{bibleId}/books/{bookId}/sections": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets an array of `Section` objects for a given `bibleId` and `bookId`
         *      */
        get: operations["getBookSections"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/bibles/{bibleId}/chapters/{chapterId}/sections": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets an array of `Section` objects for a given `bibleId` and `chapterId`
         *      */
        get: operations["getChapterSections"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/bibles/{bibleId}/sections/{sectionId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets a single `Section` object for a given `bibleId` and `sectionId`. This Section
         *     object also includes an `content` property with all verses for the Section.
         *      */
        get: operations["getSection"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/bibles/{bibleId}/chapters/{chapterId}/verses": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets an array of `Verse` objects for a given `bibleId` and `chapterId`
         *      */
        get: operations["getVerses"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/bibles/{bibleId}/verses/{verseId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets a `Verse` object for a given `bibleId` and `verseId`. This
         *     Verse object also includes an `content` property with the verse
         *     corresponding to the verseId.
         *      */
        get: operations["getVerse"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/bibles/{bibleId}/search": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets search results for a given `bibleId` and query string.  Searches
         *     will match all verses with the list of keywords provided in the query string.
         *     Order of the keywords does not matter. However all keywords must be
         *     present in a verse for it to be considered a match.
         *     The total number of results returned from a search can be limited by populating the `limit`
         *     attribute in the query string with a non-negative integer value.  If no
         *     limit value is provide a default of 10 is used.
         *     `offset` can be used to traverse paginated results.  So for example if you are using
         *     the default `limit` of 10, using an `offset` of 10 will return the second page of results,
         *     namely results 11-20.
         *     The `text` property of each verse object contains only the verse text.  It does not
         *     contain footnote references. However, those can be queried directly using the
         *     `/bibles/{bibleId}/verses/{verseId}` endpoint.
         *      */
        get: operations["searchBible"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/audio-bibles": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets an array of audio `Bible` objects authorized for current API Key
         *      */
        get: operations["getAudioBibles"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/audio-bibles/{audioBibleId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets a single audio `Bible` for a given `audioBibleId`
         *      */
        get: operations["getAudioBible"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/audio-bibles/{audioBibleId}/books": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets an array of `Book` objects for a given `audioBibleId`
         *      */
        get: operations["getAudioBooks"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/audio-bibles/{audioBibleId}/books/{bookId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets a single `Book` object for a given `audioBibleId` and `bookId`
         *      */
        get: operations["getAudioBook"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/audio-bibles/{audioBibleId}/books/{bookId}/chapters": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets an array of `Chapter` objects for a given `audioBibleId` and `bookId`
         *      */
        get: operations["getAudioChapters"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/audio-bibles/{audioBibleId}/chapters/{chapterId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets a single `Chapter` object for a given `audioBibleId` and `chapterId`.
         *     This AudioChapter object also includes an `resourceUrl` property with a HTTP URL
         *     to the mp3 audio resource for the chapter.  The `resourceUrl` is unique per request
         *     and expires in XX minutes.  The `expiresAt` property provides the Unix time value of
         *     `resourceUrl` expiration.
         *      */
        get: operations["getAudioChapter"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        Meta: {
            fums: string;
            fumsId: string;
            fumsJsInclude: string;
            fumsJs: string;
            fumsNoScript: string;
        };
        BibleSummary: {
            id: string;
            dblId: string;
            abbreviation: string;
            abbreviationLocal: string;
            language: components["schemas"]["Language"];
            countries: {
                id: string;
                name: string;
                nameLocal: string;
            }[];
            name: string;
            nameLocal: string;
            description: string;
            descriptionLocal: string;
            relatedDbl: string;
            type: string;
            /** Format: date-time */
            updatedAt: string;
            audioBibles?: components["schemas"]["AudioBibleSummary"][];
        };
        AudioBibleSummary: {
            id: string;
            name: string;
            nameLocal: string;
            description: string;
            descriptionLocal: string;
        };
        Bible: {
            id: string;
            dblId: string;
            abbreviation: string;
            abbreviationLocal: string;
            copyright: string;
            language: components["schemas"]["Language"];
            countries: {
                id: string;
                name: string;
                nameLocal: string;
            }[];
            name: string;
            nameLocal: string;
            description: string;
            descriptionLocal: string;
            info: string;
            type: string;
            /** Format: date-time */
            updatedAt: string;
            relatedDbl: string;
            audioBibles: components["schemas"]["AudioBibleSummary"][];
        };
        Book: {
            id: string;
            bibleId: string;
            abbreviation: string;
            name: string;
            nameLong: string;
            chapters?: components["schemas"]["ChapterSummary"][];
        };
        ChapterSummary: {
            id: string;
            bibleId: string;
            number: string;
            bookId: string;
            reference: string;
        };
        Chapter: {
            id: string;
            bibleId: string;
            number: string;
            bookId: string;
            content: string;
            reference: string;
            verseCount: number;
            next?: {
                id?: string;
                bookId?: string;
                number?: string;
            };
            previous?: {
                id?: string;
                bookId?: string;
                number?: string;
            };
            copyright: string;
        };
        Language: {
            id: string;
            name: string;
            nameLocal: string;
            script: string;
            scriptDirection: string;
        };
        Passage: {
            id: string;
            bibleId: string;
            orgId: string;
            content: string;
            reference: string;
            verseCount: number;
            copyright: string;
        };
        Verse: {
            id: string;
            orgId: string;
            bibleId: string;
            bookId: string;
            chapterId: string;
            content: string;
            reference: string;
            verseCount: number;
            copyright: string;
            next?: {
                id?: string;
                bookId?: string;
            };
            previous?: {
                id?: string;
                bookId?: string;
            };
        };
        SectionSummary: {
            id: string;
            bibleId: string;
            bookId: string;
            title: string;
            firstVerseId: string;
            lastVerseId: string;
            firstVerseOrgId: string;
            lastVerseOrgId: string;
        };
        Section: {
            id: string;
            bibleId: string;
            bookId: string;
            chapterId: string;
            title: string;
            content: string;
            verseCount: number;
            firstVerseId: string;
            lastVerseId: string;
            firstVerseOrgId: string;
            lastVerseOrgId: string;
            copyright: string;
            next?: {
                id?: string;
                title?: string;
            };
            previous?: {
                id?: string;
                title?: string;
            };
        };
        VerseSummary: {
            id: string;
            orgId: string;
            bibleId: string;
            bookId: string;
            chapterId: string;
            reference: string;
        };
        SearchVerse: {
            id: string;
            orgId: string;
            bibleId: string;
            bookId: string;
            chapterId: string;
            text: string;
            reference?: string;
        };
        SearchResponse: {
            query: string;
            limit: number;
            offset: number;
            total: number;
            verseCount: number;
            verses: components["schemas"]["SearchVerse"][];
            passages?: components["schemas"]["Passage"][];
        };
        AudioBible: {
            id: string;
            dblId: string;
            abbreviation: string;
            abbreviationLocal: string;
            copyright: string;
            language: components["schemas"]["Language"];
            countries: {
                id: string;
                name: string;
                nameLocal: string;
            }[];
            name: string;
            nameLocal: string;
            description: string;
            descriptionLocal: string;
            info: string;
            type: string;
            /** Format: date-time */
            updatedAt: string;
            relatedDbl: string;
        };
        AudioChapter: {
            id: string;
            bibleId: string;
            number: string;
            bookId: string;
            resourceUrl: string;
            timecodes?: {
                end: string;
                start: string;
                verseId: string;
            }[];
            expiresAt: number;
            reference: string;
            next?: {
                id?: string;
                bookId?: string;
                number?: string;
            };
            previous?: {
                id?: string;
                bookId?: string;
                number?: string;
            };
            copyright?: string;
        };
    };
    responses: never;
    parameters: {
        /** @description Boolean indicating if an array of chapter summaries should be
         *     included in the results. Defaults to false.
         *      */
        includeChapters: boolean;
        /** @description Boolean indicating if an array of chapter summaries and an array
         *     of sections should be included in the results. Defaults to false.
         *      */
        includeChaptersAndSections: boolean;
        /** @description Comma delimited list of bibleIds to include */
        parallels: string;
        /** @description Content type to be returned in the content property.  Supported values are `html` (default), `json` (beta), and `text` (beta) */
        contentType: "html" | "json" | "text";
        /** @description Include footnotes in content */
        footnotes: boolean;
        /** @description Include section titles in content */
        sectionTitles: boolean;
        /** @description Include chapter numbers in content */
        chapterNumbers: boolean;
        /** @description Include spans that wrap verse numbers and verse text for bible content. */
        verseSpans: boolean;
        /** @description Include verse numbers in content. */
        verseNumbers: boolean;
        /** @description Use the supplied id(s) to match the verseOrgId instead of the verseId */
        useOrgId: boolean;
    };
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    getBibles: {
        parameters: {
            query?: {
                /** @description ISO 639-3 three digit language code used to filter results */
                language?: string;
                /** @description Bible abbreviation to search for */
                abbreviation?: string;
                /** @description Bible name to search for */
                name?: string;
                /** @description Comma separated list of Bible Ids to return */
                ids?: string;
                /** @description Boolean to include full Bible details (e.g. copyright and promo info) */
                "include-full-details"?: boolean;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": {
                        data: components["schemas"]["BibleSummary"][];
                    };
                };
            };
            /** @description Not authorized to retrieve any Bibles or invalid language_code provided */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized for API access.  Missing or Invalid API Key provided. */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    getBible: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Id of Bible to be fetched */
                bibleId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": {
                        data: components["schemas"]["Bible"];
                    };
                };
            };
            /** @description Invalid ID supplied */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized for API access.  Missing or Invalid API Token provided. */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not authorized to retrieve this Bible */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Bible not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    getBooks: {
        parameters: {
            query?: {
                /** @description Boolean indicating if an array of chapter summaries should be
                 *     included in the results. Defaults to false.
                 *      */
                "include-chapters"?: components["parameters"]["includeChapters"];
                /** @description Boolean indicating if an array of chapter summaries and an array
                 *     of sections should be included in the results. Defaults to false.
                 *      */
                "include-chapters-and-sections"?: components["parameters"]["includeChaptersAndSections"];
            };
            header?: never;
            path: {
                /** @description Id of Bible whose Book to fetch */
                bibleId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": {
                        data: components["schemas"]["Book"][];
                    };
                };
            };
            /** @description Invalid ID supplied */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized for API access.  Missing or Invalid API Token provided. */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not authorized to retrieve Books for this Bible */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    getBook: {
        parameters: {
            query?: {
                /** @description Boolean indicating if an array of chapter summaries should be
                 *     included in the results. Defaults to false.
                 *      */
                "include-chapters"?: components["parameters"]["includeChapters"];
            };
            header?: never;
            path: {
                /** @description Id of Bible whose Book to fetch */
                bibleId: string;
                /** @description Id of the Book to fetch */
                bookId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": {
                        data: components["schemas"]["Book"];
                    };
                };
            };
            /** @description Invalid ID supplied */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized for API access.  Missing or Invalid API Token provided. */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not authorized to retrieve Books for this Bible */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Book not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    getChapters: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Id of Bible whose Chapters to fetch */
                bibleId: string;
                /** @description Id of the Book whose Chapters to fetch */
                bookId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": {
                        data: components["schemas"]["ChapterSummary"][];
                    };
                };
            };
            /** @description Invalid ID supplied */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized for API access.  Missing or Invalid API Token provided. */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not authorized to retrieve Chapters for this Bible */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Book not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    getChapter: {
        parameters: {
            query?: {
                /** @description Content type to be returned in the content property.  Supported values are `html` (default), `json` (beta), and `text` (beta) */
                "content-type"?: components["parameters"]["contentType"];
                /** @description Include footnotes in content */
                "include-notes"?: components["parameters"]["footnotes"];
                /** @description Include section titles in content */
                "include-titles"?: components["parameters"]["sectionTitles"];
                /** @description Include chapter numbers in content */
                "include-chapter-numbers"?: components["parameters"]["chapterNumbers"];
                /** @description Include verse numbers in content. */
                "include-verse-numbers"?: components["parameters"]["verseNumbers"];
                /** @description Include spans that wrap verse numbers and verse text for bible content. */
                "include-verse-spans"?: components["parameters"]["verseSpans"];
                /** @description Comma delimited list of bibleIds to include */
                parallels?: components["parameters"]["parallels"];
            };
            header?: never;
            path: {
                /** @description Id of Bible whose Chapter to fetch */
                bibleId: string;
                /** @description Id of the Chapter to fetch */
                chapterId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": {
                        data: components["schemas"]["Chapter"];
                        meta: components["schemas"]["Meta"];
                    };
                };
            };
            /** @description Invalid ID supplied */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized for API access.  Missing or Invalid API Token provided. */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not authorized to retrieve Chapters for this Bible */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Chapter not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    getPassage: {
        parameters: {
            query?: {
                /** @description Content type to be returned in the content property.  Supported values are `html` (default), `json` (beta), and `text` (beta) */
                "content-type"?: components["parameters"]["contentType"];
                /** @description Include footnotes in content */
                "include-notes"?: components["parameters"]["footnotes"];
                /** @description Include section titles in content */
                "include-titles"?: components["parameters"]["sectionTitles"];
                /** @description Include chapter numbers in content */
                "include-chapter-numbers"?: components["parameters"]["chapterNumbers"];
                /** @description Include verse numbers in content. */
                "include-verse-numbers"?: components["parameters"]["verseNumbers"];
                /** @description Include spans that wrap verse numbers and verse text for bible content. */
                "include-verse-spans"?: components["parameters"]["verseSpans"];
                /** @description Comma delimited list of bibleIds to include */
                parallels?: components["parameters"]["parallels"];
                /** @description Use the supplied id(s) to match the verseOrgId instead of the verseId */
                "use-org-id"?: components["parameters"]["useOrgId"];
            };
            header?: never;
            path: {
                /** @description Id of Bible for passage */
                bibleId: string;
                /** @description String reference id for the requested passage. */
                passageId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": {
                        data: components["schemas"]["Passage"];
                        meta: components["schemas"]["Meta"];
                    };
                };
            };
            /** @description Invalid ID supplied */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized for API access.  Missing or Invalid API Token provided. */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not authorized to retrieve Sections for this Bible */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Passage not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    getBookSections: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Id of Bible whose Sections to fetch */
                bibleId: string;
                /** @description Id of the Book whose Sections to fetch */
                bookId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": {
                        data: components["schemas"]["SectionSummary"][];
                    };
                };
            };
            /** @description Invalid ID supplied */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized for API access.  Missing or Invalid API Token provided. */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not authorized to retrieve Sections for this Bible */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Book not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    getChapterSections: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Id of Bible whose Sections to fetch */
                bibleId: string;
                /** @description Id of the Chapter whose Sections to fetch */
                chapterId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": {
                        data: components["schemas"]["SectionSummary"][];
                    };
                };
            };
            /** @description Invalid ID supplied */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized for API access.  Missing or Invalid API Token provided. */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not authorized to retrieve Sections for this Bible */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Book not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    getSection: {
        parameters: {
            query?: {
                /** @description Content type to be returned in the content property.  Supported values are `html` (default), `json` (beta), and `text` (beta) */
                "content-type"?: components["parameters"]["contentType"];
                /** @description Include footnotes in content */
                "include-notes"?: components["parameters"]["footnotes"];
                /** @description Include section titles in content */
                "include-titles"?: components["parameters"]["sectionTitles"];
                /** @description Include chapter numbers in content */
                "include-chapter-numbers"?: components["parameters"]["chapterNumbers"];
                /** @description Include verse numbers in content. */
                "include-verse-numbers"?: components["parameters"]["verseNumbers"];
                /** @description Include spans that wrap verse numbers and verse text for bible content. */
                "include-verse-spans"?: components["parameters"]["verseSpans"];
                /** @description Comma delimited list of bibleIds to include */
                parallels?: components["parameters"]["parallels"];
            };
            header?: never;
            path: {
                /** @description Id of Bible whose Section to fetch */
                bibleId: string;
                /** @description Id of the Section to fetch */
                sectionId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": {
                        data: components["schemas"]["Section"];
                        meta: components["schemas"]["Meta"];
                    };
                };
            };
            /** @description Invalid ID supplied */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized for API access.  Missing or Invalid API Token provided. */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not authorized to retrieve Sections for this Bible */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Section not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    getVerses: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Id of Bible whose Verses to fetch */
                bibleId: string;
                /** @description Id of the Chapter whose Verses to fetch */
                chapterId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": {
                        data: components["schemas"]["VerseSummary"][];
                    };
                };
            };
            /** @description Invalid ID supplied */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized for API access.  Missing or Invalid API Token provided. */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not authorized to retrieve Sections for this Bible */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Book not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    getVerse: {
        parameters: {
            query?: {
                /** @description Content type to be returned in the content property.  Supported values are `html` (default), `json` (beta), and `text` (beta) */
                "content-type"?: components["parameters"]["contentType"];
                /** @description Include footnotes in content */
                "include-notes"?: components["parameters"]["footnotes"];
                /** @description Include section titles in content */
                "include-titles"?: components["parameters"]["sectionTitles"];
                /** @description Include chapter numbers in content */
                "include-chapter-numbers"?: components["parameters"]["chapterNumbers"];
                /** @description Include verse numbers in content. */
                "include-verse-numbers"?: components["parameters"]["verseNumbers"];
                /** @description Include spans that wrap verse numbers and verse text for bible content. */
                "include-verse-spans"?: components["parameters"]["verseSpans"];
                /** @description Comma delimited list of bibleIds to include */
                parallels?: components["parameters"]["parallels"];
                /** @description Use the supplied id(s) to match the verseOrgId instead of the verseId */
                "use-org-id"?: components["parameters"]["useOrgId"];
            };
            header?: never;
            path: {
                /** @description Id of Bible for passage */
                bibleId: string;
                /** @description String reference id for the requested verse. */
                verseId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": {
                        data: components["schemas"]["Verse"];
                        meta: components["schemas"]["Meta"];
                    };
                };
            };
            /** @description Invalid ID supplied */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized for API access.  Missing or Invalid API Token provided. */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not authorized to retrieve Sections for this Bible */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Passage not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    searchBible: {
        parameters: {
            query?: {
                /** @description Search keywords or passage reference.  Supported wildcards are * and ?.
                 *     The * wildcard matches any character sequence (e.g. searching for "wo*d" finds text such as "word", "world", and "worshipped").
                 *     The ? wildcard matches any matches any single character (e.g. searching for "l?ve" finds text such as "live" and "love").
                 *      */
                query?: string;
                /** @description Integer limit for how many matching results to return. Default is 10. */
                limit?: number;
                /** @description Offset for search results. Used to paginate results */
                offset?: number;
                /** @description Sort order of results.  Supported values are `relevance` (default), `canonical` and `reverse-canonical` */
                sort?: "relevance" | "canonical" | "reverse-canonical";
                /** @description One or more, comma seperated, passage ids (book, chapter, verse) which the search will be limited to.  (i.e. gen.1,gen.5 or gen-num or gen.1.1-gen.3.5)
                 *      */
                range?: string;
                /** @description Sets the fuzziness of a search to account for misspellings. Values can be 0, 1, 2, or AUTO. Defaults to AUTO which varies depending on the
                 *      */
                fuzziness?: "AUTO" | "0" | "1" | "2";
            };
            header?: never;
            path: {
                /** @description Id of Bible to search */
                bibleId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": {
                        query?: string;
                        data: components["schemas"]["SearchResponse"];
                        meta: components["schemas"]["Meta"];
                    };
                };
            };
            /** @description Invalid ID supplied */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized for API access.  Missing or Invalid API Token provided. */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not authorized to retrieve Sections for this Bible */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Section not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    getAudioBibles: {
        parameters: {
            query?: {
                /** @description ISO 639-3 three digit language code used to filter results */
                language?: string;
                /** @description Bible abbreviation to search for */
                abbreviation?: string;
                /** @description Bible name to search for */
                name?: string;
                /** @description Comma separated list of Bible Ids to return */
                ids?: string;
                /** @description bibleId of related text Bible used to filter audio bible results */
                bibleId?: string;
                /** @description Boolean to include full Bible details (e.g. copyright and promo info) */
                "include-full-details"?: boolean;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": {
                        data: components["schemas"]["BibleSummary"][];
                    };
                };
            };
            /** @description Not authorized to retrieve any Bibles or invalid language_code provided */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized for API access.  Missing or Invalid API Key provided. */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    getAudioBible: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Id of audio Bible to be fetched */
                audioBibleId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": {
                        data: components["schemas"]["AudioBible"];
                    };
                };
            };
            /** @description Invalid ID supplied */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized for API access.  Missing or Invalid API Token provided. */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not authorized to retrieve this Bible */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Bible not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    getAudioBooks: {
        parameters: {
            query?: {
                /** @description Boolean indicating if an array of chapter summaries should be
                 *     included in the results. Defaults to false.
                 *      */
                "include-chapters"?: components["parameters"]["includeChapters"];
                /** @description Boolean indicating if an array of chapter summaries and an array
                 *     of sections should be included in the results. Defaults to false.
                 *      */
                "include-chapters-and-sections"?: components["parameters"]["includeChaptersAndSections"];
            };
            header?: never;
            path: {
                /** @description Id of audio Bible whose Book to fetch */
                audioBibleId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": {
                        data: components["schemas"]["Book"][];
                    };
                };
            };
            /** @description Invalid ID supplied */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized for API access.  Missing or Invalid API Token provided. */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not authorized to retrieve Books for this Bible */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    getAudioBook: {
        parameters: {
            query?: {
                /** @description Boolean indicating if an array of chapter summaries should be
                 *     included in the results. Defaults to false.
                 *      */
                "include-chapters"?: components["parameters"]["includeChapters"];
            };
            header?: never;
            path: {
                /** @description Id of audio Bible whose Book to fetch */
                audioBibleId: string;
                /** @description Id of the Book to fetch */
                bookId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": {
                        data: components["schemas"]["Book"];
                    };
                };
            };
            /** @description Invalid ID supplied */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized for API access.  Missing or Invalid API Token provided. */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not authorized to retrieve Books for this Bible */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Book not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    getAudioChapters: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Id of Bible whose Chapters to fetch */
                audioBibleId: string;
                /** @description Id of the Book whose Chapters to fetch */
                bookId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": {
                        data: components["schemas"]["ChapterSummary"][];
                    };
                };
            };
            /** @description Invalid ID supplied */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized for API access.  Missing or Invalid API Token provided. */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not authorized to retrieve Chapters for this Bible */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Book not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    getAudioChapter: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Id of Bible whose Chapter to fetch */
                audioBibleId: string;
                /** @description Id of the Chapter to fetch */
                chapterId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": {
                        data: components["schemas"]["AudioChapter"];
                        meta: components["schemas"]["Meta"];
                    };
                };
            };
            /** @description Invalid ID supplied */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Unauthorized for API access.  Missing or Invalid API Token provided. */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not authorized to retrieve Chapters for this Bible */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Chapter not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
}
